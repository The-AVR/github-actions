name: Python Checks

on:
  workflow_call:

jobs:
  checks:
    runs-on: ubuntu-latest
    if: "${{ !contains(github.event.head_commit.message, 'ci skip') }}"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Generate .python-version
        shell: python
        run: |
          import os
          import sys

          if os.path.isfile(".python-version"):
              sys.exit(0)

          with open("Dockerfile", "r") as fp:
              lines = fp.readlines()

          python_version = None

          for line in lines:
              # Docker FROM statement
              if line.startswith("FROM") and "python" in line:
                  python_version = line.split(":")[1].strip()
                  if "-" in python_version:
                      python_version = python_version.split("-")[0]

              # Docker ENV statement
              if line.startswith("ENV") and "PYTHON_VERSION" in line:
                  if "=" in line:
                      python_version = line.split("=")[1].strip()
                  else:
                      python_version = line.split(" ")[2].strip()

          assert python_version is not None
          print(f"Found {python_version}")

          with open(".python-version", "w") as fp:
              fp.write(python_version)

      - name: Cache Python Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.config/pypoetry
            ~/.cache/pip
          key: python-pkgs-${{ hashFiles('pyproject.toml') }}
          restore-keys: python-pkgs

      - name: Install poetry/vscode-task-runner
        run: |
          pipx install poetry
          pipx install vscode-task-runner

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Cache Pre-Commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: pre-commit

      - name: Run Pre-Commit Checks
        run: vtr pre-commit --color=always --show-diff-on-failure